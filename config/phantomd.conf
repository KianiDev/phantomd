######################################################################
# phantomd configuration
# This file lists every supported configuration option with sensible
# defaults and brief explanations. Edit values as needed. Comments
# (#) are ignored by the parser and are provided for documentation.
######################################################################

[upstream]
# Primary upstream DNS server (IP or host[:port]). Used for UDP/TCP/DoT/DoH/DoQ.
# Default: Cloudflare public DNS
dns_server = 1.1.1.1

# Protocol to use when talking to the upstream DNS server. Supported values:
# udp, tcp, https, tls, quic
# Note: QUIC support requires optional deps and is experimental.
dns_protocol = udp

# If true, the resolver avoids using IPv6 addresses for upstream connections.
disable_ipv6 = false

# Optional alternate DNS server used only to resolve upstream hostnames (SNI/IP)
# Format: ip_or_host[:port]. Example: 1.1.1.1:53 or 9.9.9.9
# Used for DoH/DoT/DoQ where we must resolve the upstream hostname before opening TLS/QUIC.
dns_resolver_server = 1.1.1.1:53

# DNS client cache settings for upstream hostname resolution
# TTL (seconds) for cached resolution entries.
dns_cache_ttl = 300
# Maximum number of cached upstream resolution entries.
dns_cache_max_size = 1024

# Enable dnspython-based DNSSEC validation for upstream responses.
# Requires dnspython installed and a valid trust anchors file (see trust_anchors_file).
dnssec_enabled = false

# Path to a trust anchors file used for DNSSEC validation (text DNSKEY lines)
trust_anchors_file =

# Pinned certificates for TLS/DoH/DoT/DoQ. Comma-separated list of host=fingerprint
# fingerprint must be lowercase sha256 hex of DER cert. Example:
# pinned_certs = dns.example.com=ab12...cd34, *.example.net=ffeedd...
pinned_certs =

[interface]
# Address the DNS server listens on. Use 0.0.0.0 to listen on all IPv4 interfaces.
listen_ip = 0.0.0.0

# Port the DNS server listens on. Privileged port (53) requires root or CAP_NET_BIND_SERVICE.
listen_port = 53

# If true, bind only to loopback (useful for testing with a local proxy).
# (This is a convenience flag for deploys that want local-only.)
listen_loopback_only = false

[logging]
# Verbose mode enables DEBUG-level logs for troubleshooting.
verbose = false

# If enabled, DNS requests/responses are written to rotating log files (dns_log_dir).
dns_logging_enabled = false

# Directory for DNS request logs (when dns_logging_enabled=true)
dns_log_dir = /var/log/phantomd

# Log filename prefix for DNS request logs (rotating files will include timestamps).
dns_log_prefix = dns-log

# Number of days to retain rotated DNS log files
dns_log_retention_days = 7

[blocklists]
# Enable automatic fetching & merging of remote blocklists. When disabled,
# local files under `blocklists/` may still be loaded manually.
enabled = false

# Comma-separated list of URLs or local file paths to fetch and install into
# the local `blocklists/` folder. Examples:
# https://example.com/list.txt, /path/to/local.txt
urls =

# Directory to store/scan blocklist files (relative or absolute).
local_blocklist_dir = blocklists

# How often (seconds) to re-fetch remote blocklists. Default = 86400 (24h).
interval_seconds = 86400

# Action to take for blocked domains: ZEROIP, NXDOMAIN, or REFUSED
action = NXDOMAIN

# If true, detect file changes in local_blocklist_dir and reload immediately.
reload_on_change = true

[dhcp]
# Enable the integrated DHCP server
enabled = false

# Network layout accepted by the DHCP server
# Subnet base (network address)
subnet = 192.168.50.0
# Subnet mask
netmask = 255.255.255.0

# Dynamic allocation range (inclusive)
start_ip = 192.168.50.100
end_ip = 192.168.50.200

# Default lease TTL (seconds)
lease_ttl = 86400

# Static leases in format mac=ip,mac=ip  (MAC normalized to lowercase xx:xx:..)
# Example: 00:11:22:33:44:55=192.168.50.10,66:77:88:99:aa:bb=192.168.50.11
static_leases =

# Path to DHCP lease DB (JSON by default). File will be created if missing.
dhcp_lease_db = /var/lib/phantomd/dhcp_leases.json

# Rate limiting: requests-per-second allowed per MAC and per source IP.
# These protect against floods from a single host.
dhcp_rate_limit_rps = 5.0
dhcp_rate_limit_burst = 20

# ARP probing: when enabled the server will check for IP conflicts via `arping`
# before confirming an allocation. Requires `arping` on PATH.
arp_probe_enable = true
# ARP probe timeout (seconds)
arp_probe_timeout = 1

# After binding to privileged port the server can drop privileges to this user.
# Set to '' to skip privilege drop.
privilege_drop_user = nobody
privilege_drop_group =
# Optional chroot directory applied before dropping privileges. Leave empty to skip.
chroot_dir =

# For testing you may want to bind DHCP to a non-privileged port (e.g., 6767).
test_bind_port = 67

# Use SQLite (WAL-backed) lease DB when available (aiosqlite). If true and
# aiosqlite available, server will try to migrate JSON leases into SQLite.
lease_sqlite_enabled = true
lease_sqlite_path = /var/lib/phantomd/dhcp_leases.sqlite

[monitoring]
# Enable Prometheus metrics export (requires prometheus_client)
metrics_enabled = false
# Port on which the local metrics HTTP server will be started (localhost only)
metrics_port = 8000

[performance]
# Enable uvloop if available (improves asyncio performance)
uvloop_enable = false

# General DNS resolver cache settings (TTL & maximum entries)
dns_cache_ttl = 300
dns_cache_max_size = 1024

[security]
# Suggested runtime behavior: run as non-root and grant CAP_NET_BIND_SERVICE to
# the binary if you need binding to privileged ports without full root.
# Set to true to reject binding to privileged ports unless the process has
# appropriate privileges (recommended for production).
require_privileged_bind = false

# Minimal permissions advice (no effect on runtime) - document recommended
# filesystem permissions for log and DB locations.
log_dir_owner = root:root
lease_db_owner = root:root

[advanced]
# Low-level tuning points for retry/backoff behavior
# Number of attempts to try upstream request (default >= 1)
upstream_retries = 2
# Initial backoff seconds for retries
upstream_initial_backoff = 0.1

# Timeout (seconds) for UDP upstream queries
upstream_udp_timeout = 2.0
# Timeout (seconds) for TCP/DoT upstream queries
upstream_tcp_timeout = 5.0
# Timeout (seconds) for DoH/DoQ queries
upstream_doh_timeout = 5.0

######################################################################
# End of configuration file
######################################################################